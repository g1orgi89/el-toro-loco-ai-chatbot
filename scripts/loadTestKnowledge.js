/**
 * Script to load test knowledge documents
 * @file scripts/loadTestKnowledge.js
 */

require('dotenv').config();
const mongoose = require('mongoose');
const KnowledgeDocument = require('../server/models/knowledge');
const logger = require('../server/utils/logger');

const testDocuments = [
  {
    title: "–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–∞ Xverse",
    content: "–ü–æ—à–∞–≥–æ–≤–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é –≥—Ä–∏–±–Ω–æ–π –∫–æ—Ä–∑–∏–Ω–∫–∏ Xverse –∫ –Ω–∞—à–µ–º—É –º–∏—Ü–µ–ª–∏—é Shrooms:\n\n1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ Xverse –≤ –±—Ä–∞—É–∑–µ—Ä–µ\n2. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –∫–æ—à–µ–ª–µ–∫ –∏–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π\n3. –û—Ç–∫—Ä–æ–π—Ç–µ —Å–∞–π—Ç Shrooms.io\n4. –ù–∞–∂–º–∏—Ç–µ 'Connect Wallet'\n5. –í—ã–±–µ—Ä–∏—Ç–µ Xverse –∏–∑ —Å–ø–∏—Å–∫–∞\n6. –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ\n\n–í–∞—à–∏ —Å–ø–æ—Ä—ã —Ç–µ–ø–µ—Ä—å –≥–æ—Ç–æ–≤—ã –∫ –≤—ã—Ä–∞—â–∏–≤–∞–Ω–∏—é! üçÑ",
    category: "user-guide",
    language: "ru",
    tags: ["–∫–æ—à–µ–ª–µ–∫", "xverse", "–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ", "—Å–ø–æ—Ä—ã"]
  },
  {
    title: "SHROOMS Tokenomics",
    content: "The SHROOMS token is the core mushroom of our ecosystem! üçÑ\n\nTotal supply: 100M SHROOMS\n\nDistribution:\n- 40% for farming (growing mushrooms)\n- 25% for the development team (mushroom cultivators)\n- 20% for investors (early mushroom collectors)\n- 15% for marketing and partnerships\n\nStaking rewards: Lock your SHROOMS to earn more mushrooms!\nCurrent farming yield: ~12.5% APY in the STX-SHROOMS pool.\n\nRemember: Only invest what you can afford to lose in the mushroom forest! üå≤",
    category: "tokenomics",
    language: "en",
    tags: ["shrooms", "token", "farming", "staking", "apy"]
  },
  {
    title: "–†–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º",
    content: "–ï—Å–ª–∏ –≤–∞—à–∞ –≥—Ä–∏–±–Ω–∞—è –∫–æ—Ä–∑–∏–Ω–∫–∞ –Ω–µ –ø–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è:\n\n1. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ Xverse –≤–∫–ª—é—á–µ–Ω–æ\n2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –∫–æ—à–µ–ª–µ–∫ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω\n3. –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É (F5)\n4. –û—á–∏—Å—Ç–∏—Ç–µ –∫—ç—à –±—Ä–∞—É–∑–µ—Ä–∞\n5. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –±–∞–ª–∞–Ω—Å STX –¥–ª—è –æ–ø–ª–∞—Ç—ã –∫–æ–º–∏—Å—Å–∏–∏\n6. –û—Ç–∫–ª—é—á–∏—Ç–µ –±–ª–æ–∫–∏—Ä–æ–≤—â–∏–∫–∏ —Ä–µ–∫–ª–∞–º—ã\n\n–ï—Å–ª–∏ —Å–ø–æ—Ä—ã –≤—Å–µ –µ—â–µ –Ω–µ –ø—Ä–æ—Ä–∞—Å—Ç–∞—é—Ç, —Å–æ–∑–¥–∞–π—Ç–µ —Ç–∏–∫–µ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏! –ù–∞—à–∏ –≥—Ä–∏–±–Ω–∏–∫–∏-—ç–∫—Å–ø–µ—Ä—Ç—ã –ø–æ–º–æ–≥—É—Ç –≤–∞–º –≤ –≥—Ä–∏–±–Ω–æ–º –ª–µ—Å—É. üîß",
    category: "troubleshooting",
    language: "ru",
    tags: ["–ø—Ä–æ–±–ª–µ–º—ã", "–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ", "xverse", "–æ—à–∏–±–∫–∏"]
  },
  {
    title: "Como conectar billetera Xverse",
    content: "Instrucciones paso a paso para conectar tu cesta de hongos Xverse a nuestro micelio Shrooms:\n\n1. Instala la extensi√≥n Xverse en tu navegador\n2. Crea una nueva billetera o importa una existente\n3. Abre el sitio Shrooms.io\n4. Haz clic en 'Connect Wallet'\n5. Selecciona Xverse de la lista\n6. Confirma la conexi√≥n\n\n¬°Tus esporas ahora est√°n listas para crecer! üçÑ",
    category: "user-guide",
    language: "es",
    tags: ["billetera", "xverse", "conexion", "esporas"]
  },
  {
    title: "How to Farm SHROOMS",
    content: "Start your mushroom growing journey! üçÑ\n\n1. Connect your wallet to Shrooms.io\n2. Have some STX and SHROOMS tokens ready\n3. Go to the 'Farming' section\n4. Choose a pool (STX-SHROOMS recommended)\n5. Enter the amount you want to farm\n6. Confirm the transaction\n7. Watch your mushrooms grow!\n\nCurrent yield: ~12.5% APY\nMinimum farming amount: 10 SHROOMS\n\nRemember: Farming involves impermanent loss risk!",
    category: "user-guide", 
    language: "en",
    tags: ["farming", "pool", "stx", "shrooms", "yield"]
  },
  {
    title: "T√©cnicas de staking avanzadas",
    content: "Maximiza tus hongos con t√©cnicas de staking avanzadas:\n\n- Staking flexible: 5% APY, sin bloqueo\n- Staking 30 d√≠as: 8% APY, per√≠odo fijo\n- Staking 90 d√≠as: 15% APY, m√°ximas recompensas\n\nBeneficios adicionales:\n- Acceso a funciones premium\n- Descuentos en comisiones\n- Participaci√≥n en governance\n- Acceso prioritario a NFTs\n\n¬°Haz que tus hongos trabajen para ti! üí∞",
    category: "tokenomics",
    language: "es",
    tags: ["staking", "apy", "recompensas", "governance"]
  }
];

async function loadTestDocuments() {
  try {
    // Connect to MongoDB
    await mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/shrooms-support');
    console.log('Connected to MongoDB');

    // Clear existing test documents (optional)
    const existingCount = await KnowledgeDocument.countDocuments();
    console.log(`Found ${existingCount} existing documents`);

    // Create text index if it doesn't exist
    try {
      await KnowledgeDocument.collection.createIndex(
        { title: 'text', content: 'text', tags: 'text' },
        { 
          weights: { title: 10, content: 5, tags: 3 },
          name: 'knowledge_text_search'
        }
      );
      console.log('Text search index created');
    } catch (error) {
      console.log('Text index already exists or creation failed:', error.message);
    }

    // Insert test documents
    for (const docData of testDocuments) {
      try {
        const doc = new KnowledgeDocument(docData);
        await doc.save();
        console.log(`‚úÖ Created: "${docData.title}" (${docData.language})`);
      } catch (error) {
        console.error(`‚ùå Failed to create "${docData.title}":`, error.message);
      }
    }

    const finalCount = await KnowledgeDocument.countDocuments();
    console.log(`\nüéâ Loading complete! Total documents: ${finalCount}`);
    
    // Test search functionality
    console.log('\nüîç Testing search...');
    const searchResults = await KnowledgeDocument.find({ $text: { $search: '–∫–æ—à–µ–ª–µ–∫' } });
    console.log(`Found ${searchResults.length} results for "–∫–æ—à–µ–ª–µ–∫"`);

    await mongoose.disconnect();
    console.log('Disconnected from MongoDB');
  } catch (error) {
    console.error('Error loading test documents:', error);
    process.exit(1);
  }
}

// Run if called directly
if (require.main === module) {
  loadTestDocuments().catch(console.error);
}

module.exports = { loadTestDocuments, testDocuments };