/**
 * –¢–µ—Å—Ç–æ–≤—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ñ—Ñ-—Ç–æ–ø–∏–∫ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
 * @file tests/off-topic-tests.js
 */

// –¢–µ—Å—Ç–æ–≤—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –¥–ª—è –æ—Ñ—Ñ-—Ç–æ–ø–∏–∫ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
const offTopicTests = {
  // === –†–ê–ó–†–ï–®–ï–ù–ù–´–ï –¢–ï–ú–´ (–æ Shrooms) ===
  onTopic: {
    en: [
      "How does Shrooms staking work?",
      "Problem with my SHROOMS tokens",
      "Can't connect wallet to Shrooms platform",
      "Error farming SHROOMS",
      "What is Shrooms project?",
      "How to stake in Shrooms?",
      "Shrooms tokenomics",
      "Issue with Xverse wallet on Shrooms",
      "STX transaction stuck in Shrooms",
      "How to buy SHROOMS tokens?"
    ],
    ru: [
      "–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å—Ç–µ–π–∫–∏–Ω–≥ –≤ Shrooms?",
      "–ü—Ä–æ–±–ª–µ–º–∞ —Å —Ç–æ–∫–µ–Ω–∞–º–∏ SHROOMS",
      "–ù–µ –º–æ–≥—É –ø–æ–¥–∫–ª—é—á–∏—Ç—å –∫–æ—à–µ–ª–µ–∫ –∫ Shrooms",
      "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–∞—Ä–º–∏–Ω–≥–µ SHROOMS",
      "–ß—Ç–æ —Ç–∞–∫–æ–µ –ø—Ä–æ–µ–∫—Ç Shrooms?",
      "–ö–∞–∫ —Å—Ç–µ–π–∫–∞—Ç—å –≤ Shrooms?",
      "–¢–æ–∫–µ–Ω–æ–º–∏–∫–∞ Shrooms",
      "–ü—Ä–æ–±–ª–µ–º–∞ —Å Xverse –≤ Shrooms",
      "–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –∑–∞–≤–∏—Å–ª–∞ –≤ Shrooms",
      "–ö–∞–∫ –∫—É–ø–∏—Ç—å —Ç–æ–∫–µ–Ω—ã SHROOMS?"
    ],
    es: [
      "¬øC√≥mo funciona el staking en Shrooms?",
      "Problema con mis tokens SHROOMS",
      "No puedo conectar cartera a Shrooms",
      "Error haciendo farming de SHROOMS",
      "¬øQu√© es el proyecto Shrooms?",
      "¬øC√≥mo hacer staking en Shrooms?",
      "Token√≥mica de Shrooms",
      "Problema con Xverse en Shrooms",
      "Transacci√≥n atascada en Shrooms",
      "¬øC√≥mo comprar tokens SHROOMS?"
    ]
  },

  // === –û–§–§–ï–†–ù–´–• –¢–ï–ú–´ (–ù–ï –æ Shrooms) ===
  offTopic: {
    en: [
      "What's the weather today?",
      "Tell me about Bitcoin",
      "How does Ethereum work?",
      "What's the price of Dogecoin?",
      "Tell me a joke",
      "How's life?",
      "What's on the news?",
      "Stock market predictions",
      "Real estate investment",
      "Sports results today"
    ],
    ru: [
      "–ö–∞–∫–∞—è —Å–µ–≥–æ–¥–Ω—è –ø–æ–≥–æ–¥–∞?",
      "–†–∞—Å—Å–∫–∞–∂–∏ –æ –ë–∏—Ç–∫–æ–∏–Ω–µ",
      "–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –≠—Ñ–∏—Ä–∏—É–º?",
      "–ö–∞–∫–∞—è —Ü–µ–Ω–∞ —É –î–æ–≥–µ–∫–æ–∏–Ω–∞?",
      "–†–∞—Å—Å–∫–∞–∂–∏ –∞–Ω–µ–∫–¥–æ—Ç",
      "–ö–∞–∫ –¥–µ–ª–∞?",
      "–ß—Ç–æ –≤ –Ω–æ–≤–æ—Å—Ç—è—Ö?",
      "–ü—Ä–æ–≥–Ω–æ–∑—ã —Ñ–æ–Ω–¥–æ–≤–æ–≥–æ —Ä—ã–Ω–∫–∞",
      "–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –≤ –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å",
      "–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã"
    ],
    es: [
      "¬øQu√© tiempo hace hoy?",
      "H√°blame de Bitcoin",
      "¬øC√≥mo funciona Ethereum?",
      "¬øCu√°l es el precio de Dogecoin?",
      "Cuenta un chiste",
      "¬øC√≥mo va la vida?",
      "¬øQu√© hay en las noticias?",
      "Predicciones del mercado de valores",
      "Inversi√≥n en bienes ra√≠ces",
      "Resultados deportivos"
    ]
  },

  // === –ü–û–ì–†–ê–ù–ò–ß–ù–´–ï –°–õ–£–ß–ê–ò ===
  borderline: {
    // –£–ø–æ–º–∏–Ω–∞–Ω–∏–µ –¥—Ä—É–≥–∏—Ö –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç –Ω–æ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ Shrooms - –†–ê–ó–†–ï–®–ï–ù–û
    allowedWithContext: [
      "How to swap Bitcoin for SHROOMS tokens?",
      "–ö–∞–∫ –æ–±–º–µ–Ω—è—Ç—å ETH –Ω–∞ SHROOMS?",
      "Diferencia entre STX y SHROOMS tokens?"
    ],
    
    // –û–±—â–∏–µ –∫—Ä–∏–ø—Ç–æ-–≤–æ–ø—Ä–æ—Å—ã –±–µ–∑ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è Shrooms - –ù–ï –†–ê–ó–†–ï–®–ï–ù–û
    generalCrypto: [
      "What is blockchain?",
      "How to buy cryptocurrency?",
      "Best wallet for crypto?",
      "¬øQu√© es DeFi?",
      "–ß—Ç–æ —Ç–∞–∫–æ–µ –±–ª–æ–∫—á–µ–π–Ω?",
      "–ö–∞–∫ –∫—É–ø–∏—Ç—å –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É?"
    ]
  },

  // === –ö–û–†–û–¢–ö–ò–ï –°–û–û–ë–©–ï–ù–ò–Ø (–æ–±—ã—á–Ω–æ —Ä–∞–∑—Ä–µ—à–µ–Ω—ã) ===
  short: [
    "Hi", "Hello", "–ü—Ä–∏–≤–µ—Ç", "Hola",
    "?", "!", "Help", "–ü–æ–º–æ—â—å", "Ayuda"
  ]
};

// –û–∂–∏–¥–∞–µ–º—ã–µ –æ—Ç–≤–µ—Ç—ã
const expectedResponses = {
  onTopic: {
    // –î–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ø–æ–ª–µ–∑–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ Shrooms
    contains: ["sporus", "mushroom", "–≥—Ä–∏–±–Ω", "hongo"],
    notContains: ["specialize exclusively", "—Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—Å—å –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ"]
  },
  
  offTopic: {
    // –î–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –æ—Ñ—Ñ-—Ç–æ–ø–∏–∫ –æ—Ç–≤–µ—Ç
    contains: {
      en: ["specialize exclusively", "Shrooms project"],
      ru: ["—Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—Å—å –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ", "–ø—Ä–æ–µ–∫—Ç Shrooms"], 
      es: ["especializo exclusivamente", "proyecto Shrooms"]
    }
  }
};

module.exports = {
  offTopicTests,
  expectedResponses
};

// === –¢–ï–°–¢–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø ===
function testOffTopicFiltering(chatService) {
  const results = {
    passed: 0,
    failed: 0,
    details: []
  };

  // –¢–µ—Å—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö —Ç–µ–º
  console.log("üß™ Testing ON-TOPIC messages...");
  Object.entries(offTopicTests.onTopic).forEach(([lang, messages]) => {
    messages.forEach(message => {
      const response = chatService.isAboutShrooms(message, lang);
      if (response) {
        results.passed++;
        console.log(`‚úÖ [${lang}] "${message}" - correctly allowed`);
      } else {
        results.failed++;
        results.details.push(`‚ùå [${lang}] "${message}" - incorrectly blocked`);
      }
    });
  });

  // –¢–µ—Å—Ç –æ—Ñ—Ñ-—Ç–æ–ø–∏–∫
  console.log("\nüß™ Testing OFF-TOPIC messages...");
  Object.entries(offTopicTests.offTopic).forEach(([lang, messages]) => {
    messages.forEach(message => {
      const response = chatService.isAboutShrooms(message, lang);
      if (!response) {
        results.passed++;
        console.log(`‚úÖ [${lang}] "${message}" - correctly blocked`);
      } else {
        results.failed++;
        results.details.push(`‚ùå [${lang}] "${message}" - incorrectly allowed`);
      }
    });
  });

  // –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
  console.log("\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:");
  console.log(`‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ: ${results.passed}`);
  console.log(`‚ùå –ü—Ä–æ–≤–∞–ª–µ–Ω–æ: ${results.failed}`);
  console.log(`üéØ –¢–æ—á–Ω–æ—Å—Ç—å: ${((results.passed / (results.passed + results.failed)) * 100).toFixed(1)}%`);

  if (results.details.length > 0) {
    console.log("\n‚ùå –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–æ–∫:");
    results.details.forEach(detail => console.log(detail));
  }

  return results;
}

// –≠–∫—Å–ø–æ—Ä—Ç —Ç–µ—Å—Ç–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
module.exports.testOffTopicFiltering = testOffTopicFiltering;
